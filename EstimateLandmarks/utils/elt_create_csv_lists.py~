import os
import random
import numpy as np
import math
import csv

# variable definitions
csv_path = "data/MUCT_fixed/muct-landmarks/muct76-opencv.csv"
num_persons = 625
test_proba = 0.2

# determine test persons
test_persons = random.sample(range(num_persons), math.floor(num_persons * test_proba))

# initialize strings which contain the content of the CSV files
csv_str_train = "Filename;Width;Height;LeftEyeX;LeftEyeY;RightEyeX;RightEyeY"
csv_str_test = "Filename;Width;Height;LeftEyeX;LeftEyeY;RightEyeX;RightEyeY"

with open(csv_path) as csv_file:
	# create CSV reader
	csv_reader = csv.reader(csv_file, delimiter=",")

	# skip the first line, which contains the headlines
	next(csv_reader)

	# folder, where the images are saved
	folder = "data/MUCT_fixed/jpg/"

	# iterate over images
	for image_row in csv_reader:
		# break when all images where considered
		if image_row[0][0:2] == "ir":
			break

		# construct image path
		image_path = folder + image_row[0]

		# relevant landmarks to calculate eye position
		l_indices = [27,68,28,69,29,70,30,71]
		r_indices = [34,73,33,72,32,75,35,74]

		# calculate left eye
		leftEyeX = 0.
		leftEyeY = 0.
		for i in l_indices:
			leftEyeX += float(image_row[2*i + 2])
			leftEyeY += float(image_row[2*i + 3])
		leftEyeX *= 0.125
		leftEyeY *= 0.125

		#calculate right eye
		rightEyeX = 0.
		rightEyeY = 0.
		for i in r_indices:
			rightEyeX += float(image_row[2*i + 2])
			rightEyeY += float(image_row[2*i + 3])
		rightEyeX *= 0.125
		rightEyeY *= 0.125

		# construct csv string
		csv_string = "\n" + image_path + ";48;64;" + str(leftEyeX) + ";" + str(leftEyeY) + ";" + str(rightEyeX) + ";" + str(rightEyeY)

		# check whether person is a test person
		if int(image_row[0][1:4]) in test_persons:
			csv_str_test += csv_string
		else:
			csv_str_train += csv_string

# save CSV files
with open("data/MUCT_fixed/muct-landmarks/MUCT_TRAIN.csv", "w") as text_file:
	text_file.write(csv_str_train)
with open("data/MUCT_fixed/muct-landmarks/MUCT_TEST.csv", "w") as text_file:
	text_file.write(csv_str_test)
